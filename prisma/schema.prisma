// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./prisma-client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Document {
  id        String    @id @default(uuid())
  userId    String
  userName  String?
  fileName  String?
  fileSize  Int?
  fileKey   String?   @unique
  fileUrl   String?
  createdAt DateTime  @default(now())
  messages  Message[]

  @@index([userId], name: "idx_document_userId")
}

enum Role {
  user
  assistant
}

model Message {
  id         String   @id @default(uuid())
  role       Role
  content    String   @db.Text
  documentId String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())

  @@index([documentId])
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
  INVITED
}

model Request {
  id        String        @id @default(cuid())
  email     String        @unique
  firstName String
  lastName  String
  company   String?
  jobTitle  String?
  message   String?
  status    RequestStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}
